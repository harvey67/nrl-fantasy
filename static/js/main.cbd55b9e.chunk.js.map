{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","this","auth","db","firestore","u_id","currentUserID","currentUsername","a","console","log","firebase","database","ref","once","k","x","playerStats","val","v","seasonStats","App","userType","document","getElementById","style","display","test","navigator","userAgent","getPlayers","getSeason","getElementsByClassName","getSelect","getHtml","getCharts","playerName","i","length","width","marginLeft","data","p","player","push","roundLables","fantasyScores","colours","borderColours","borderPriceColours","priceChanges","parseInt","rnd","fantasy_points","price_changes","split","replace","ctx","getContext","Chart","type","labels","datasets","backgroundColor","borderColor","borderWidth","options","responsive","legend","scales","yAxes","ticks","beginAtZero","fill","lineTension","suggestedMin","Math","min","apply","suggestedMax","myHtml","name","value","teamClass","team","imgLink","photo_link","includes","opponent_avg","next_opponent","price","position","season_avg","break_even","ownerage","ppm","innerHTML","selectHTML","useEffect","startUp","className","id","onClick","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cbd55b9e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport app from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAHN7qi76sqh-ZHSlAGryJEbTvxcsvFJaY\",\r\n    authDomain: \"user-database-test-9ee1d.firebaseapp.com\",\r\n    databaseURL: \"https://user-database-test-9ee1d.firebaseio.com\",\r\n    projectId: \"user-database-test-9ee1d\",\r\n    storageBucket: \"user-database-test-9ee1d.appspot.com\",\r\n    messagingSenderId: \"425239506606\",\r\n    appId: \"1:425239506606:web:decf3cc0780d2d8e9d073f\"\r\n};\r\n\r\n\r\nclass Firebase {\r\n    \r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore;\r\n        this.u_id = 0;\r\n        this.currentUserID = 0;\r\n        this.currentUsername = \"\";        \r\n    }\r\n\r\n    async getPlayers() {\r\n        console.log(\"getting fantasy player stats lists...\");\r\n        // get a list of all homework from userid\r\n        let db = \"fantasyPlayerStats\";\r\n        let x = await firebase.database().ref(db).once('value');\r\n        let playerStats = [];\r\n        let v;\r\n        for (let k in x.val()) {\r\n            v = x.val()[k];\r\n            playerStats = v;\r\n        }\r\n        console.log(\"done\");\r\n        return playerStats;\r\n    }\r\n\r\n    async getSeason() {\r\n        console.log(\"getting fantasy player stats lists...\");\r\n        // get a list of all homework from userid\r\n        let db = \"fantasyPlayerSeasonStats\";\r\n        let x = await firebase.database().ref(db).once('value');\r\n        let seasonStats = [];\r\n        let v;\r\n        for (let k in x.val()) {\r\n            v = x.val()[k];\r\n            seasonStats = v;\r\n        }\r\n        console.log(\"done\");\r\n        return seasonStats;\r\n    }\r\n\r\n}\r\n\r\nexport default new Firebase();\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport firebase from './firebase';\nimport Chart from \"chart.js\";\n\nconst App = () => {\n  let playerStats, seasonStats;\n  let userType = \"\";\n  useEffect(() => { \n    startUp();\n  });\n\n  async function startUp() {\n    console.log(\"starting...\");\n    //console.log(\"screen.width:\" + window.innerWidth);\n    document.getElementById(\"web-content\").style.display = \"none\";\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n      userType = \"Mobile\";\n    } else {\n      userType = \"Computer\";\n    }\n    //userType = \"Mobile\";\n    playerStats = await firebase.getPlayers();\n    seasonStats = await firebase.getSeason();\n    document.getElementsByClassName(\"loadingData\")[0].style.display = \"none\";\n    getSelect();\n    getHtml();\n    //getCharts();\n    document.getElementById(\"web-content\").style.display = \"block\";\n  }\n\n  function getCharts(playerName) {\n    //document.getElementById(\"FantasyScoresID\").style.width = \"400px\";\n    if (userType === \"Mobile\") {\n      for (let i = 0; i < document.getElementsByClassName(\"canvasChart\").length; i += 1) {\n        document.getElementsByClassName(\"canvasChart\")[i].style.width = \"100%\";\n        document.getElementsByClassName(\"canvasChart\")[i].style.display = \"block\";\n        document.getElementsByClassName(\"canvasChart\")[i].style.marginLeft = \"0\";\n      }\n    }\n    let data = [];\n    for (let p = 0; p < seasonStats.length; p++) {\n      if (seasonStats[p].player === playerName) {\n        data.push(seasonStats[p]);\n      }\n    }\n    //console.log(data);\n    let roundLables = [];\n    let fantasyScores = [];\n    let colours = [];\n    let borderColours = [];\n    let borderPriceColours = [];\n    let priceChanges = [];\n    for (let i = 0; i < data.length; i++) {\n      roundLables.push(parseInt(data[i].rnd));\n      fantasyScores.push(parseInt(data[i].fantasy_points));\n      colours.push('rgba(255, 0, 0, 0.5)');\n      borderColours.push('rgba(255, 0, 0, 1)');\n      borderPriceColours.push('rgba(0, 130, 0, 1)');\n      priceChanges.push(parseInt(data[i].price_changes.split(\"k\")[0].replace(\"$\", \"\")))\n    }\n    let ctx = document.getElementById(\"FantasyScoresID\").getContext('2d');\n    new Chart(ctx, {\n        type: 'bar',\n        data: {\n            labels: roundLables,\n            datasets: [{\n                data: fantasyScores,\n                backgroundColor: colours,\n                borderColor: borderColours,\n                borderWidth: 1\n            }]\n        },\n        options: {\n          responsive: true,\n          legend: {\n            display: false\n          },\n          scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n          }\n        }          \n    });\n\n    ctx = document.getElementById(\"PriceChangesID\").getContext('2d');\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n          labels: roundLables,\n          datasets: [{\n              data: priceChanges,\n              fill: false,\n              lineTension: 0,\n              borderColor: borderPriceColours,\n              borderWidth: 1\n          }]\n      },\n      options: {\n        responsive: true,\n        legend: {\n          display: false\n        },\n        scales: {\n          yAxes: [{\n              ticks: {\n                  suggestedMin: Math.min.apply(null, priceChanges) - 20,\n                  suggestedMax: Math.min.apply(null, priceChanges) + 20\n              }\n          }]\n        } \n      }        \n    });\n\n  }\n  \n  function getHtml() {\n    let myHtml = \"\";\n    //console.log(playerStats);\n    for (let p = 0; p < playerStats.length; p++) {\n      let name = playerStats[p].player;\n      let lastName = name.split(\" \")[1];\n      let firstName = name.split(\" \")[0];\n      let x = lastName + \", \" + firstName;\n      if (x === document.getElementById('playerSelectID').value) {\n        let teamClass = playerStats[p].team.split(\" \");        \n        teamClass = teamClass[teamClass.length - 1] + \"Class\";\n        let imgLink = playerStats[p].photo_link;\n        if (!imgLink.includes(\"rugbyimages\")) {\n          imgLink = \"https://favim.com/assets/img/avatar-default.jpg\";\n        }\n\n        myHtml += \"<div class='playerProfile\" + userType + \"'>\";\n        myHtml += \"<div class='playerProfileDetails\" + userType + \"'>\";\n        myHtml += \"<h3>\" + playerStats[p].player + \"</h3>\";\n        myHtml += \"<p>\" + playerStats[p].team + \"</p>\";\n        myHtml += \"<img src='\" + imgLink + \"' />\";\n        myHtml += \"</div>\";\n        myHtml += \"<div class='playerProfileTable\" + userType + \"'>\";\n        if (playerStats[p].opponent_avg !== \"nan\") {\n          myHtml += \"<p><b>Next Opponent:</b> \" + playerStats[p].next_opponent + \" (averages \" + playerStats[p].opponent_avg + \")</p>\";\n        } else {\n          myHtml += \"<p><b>Next Opponent:</b> \" + playerStats[p].next_opponent +\"</p>\";\n        }   \n        if (userType === \"Computer\") {\n          myHtml += \"<table class='\" + teamClass + \"'><tbody><tr><th>Price</th><th>Position</th><th>Season Avg</th><th>Break Even</th><th>Ownerage</th><th>PPM</th></tr>\";\n          myHtml += \"<tr><td>$\" + playerStats[p].price + \"k</td><td>\" + playerStats[p].position + \"</td><td>\" + playerStats[p].season_avg + \"</td><td>\" + playerStats[p].break_even + \"</td><td>\" + playerStats[p].ownerage + \"</td><td>\" + playerStats[p].ppm + \"</td></tr>\";\n          myHtml += \"</tbody></table></div>\";\n          myHtml += \"</div>\";\n          myHtml += \"<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\";\n        } else {\n          myHtml += \"<table class='\" + teamClass + \"'><tbody>\";\n          myHtml += \"<tr><th>Price</th><td>$\" + playerStats[p].price + \"k</td></tr>\";\n          myHtml += \"<tr><th>Position</th><td>\" + playerStats[p].position + \"</td></tr>\";\n          myHtml += \"<tr><th>Season Avg</th><td>\" + playerStats[p].season_avg + \"</td></tr>\";\n          myHtml += \"<tr><th>Break Even</th><td>\" + playerStats[p].break_even + \"</td></tr>\";\n          myHtml += \"<tr><th>Ownerage</th><td>\" + playerStats[p].ownerage + \"</td></tr>\";\n          myHtml += \"<tr><th>PPM</th><td>\" + playerStats[p].ppm + \"</td></tr>\";\n          myHtml += \"</tbody></table></div>\";\n          myHtml += \"</div>\";\n          myHtml += \"<br />\";\n        }\n                    \n        //myHtml += `<div class=\"canvasClass\"><canvas id=\"CanvasID\" width=\"100\" height=\"100\"></canvas></div>`;\n        getCharts(playerStats[p].player);\n      } \n    }\n\n    document.getElementById(\"myHtml\").innerHTML = myHtml;\n  }\n\n  function getSelect() {\n    let selectHTML = \"<select id='playerSelectID'>\";\n    for (let p = 0; p < playerStats.length; p++) {\n      let name = playerStats[p].player;\n      let lastName = name.split(\" \")[1];\n      let firstName = name.split(\" \")[0];\n      let x = lastName + \", \" + firstName;\n      selectHTML += \"<option value='\" + x + \"'>\" + x + \"</option>\";\n    }\n    selectHTML += \"</select>\";\n    document.getElementById(\"playerSearchID\").innerHTML = selectHTML;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"loadingData\">\n        <br /><br />\n        Getting data from database...\n        <br /><br />\n        <div className=\"spinner loading\"></div>\n      </div>      \n      <br />\n      <div id=\"web-content\">\n        <div id=\"playerSearchID\"></div>\n        <button onClick={getHtml}>Search Player</button>\n        <div id=\"myHtml\"></div>\n        \n        <div className=\"canvases\">\n          <div className=\"canvasChart\">\n            <h4>Scores this season:</h4>\n            <div className=\"canvasClass\"><canvas id=\"FantasyScoresID\" width=\"100\" height=\"100\"></canvas></div>\n          </div>\n          <div className=\"canvasChart\" style={{marginLeft:\"20px\"}}>\n            <h4>Price changes ($):</h4>\n            <div className=\"canvasClass\"><canvas id=\"PriceChangesID\" width=\"100\" height=\"100\"></canvas></div>\n          </div>\n        </div>\n      </div>\n      <br /><br />\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}